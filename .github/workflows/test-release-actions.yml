name: Nightly build

on:
  push:

jobs:

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create asset
        run: |
          echo "Release asset ${{ github.run_number }}" > release-${{ github.run_number }}.txt

      - name: Get jb-* tags
        id: get_jb_tags
        run: |
          TAG=$(git tag --list | sort -V | tail -n 1)
          echo "latest_tag=$TAG" >> $GITHUB_ENV

      - name: Get git log from last tag
        id: gitlog
        run: |
          git log --pretty=format:"- %s by @%an" > git.log

          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat git.log)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          cat git.log
          

      - name: Commit and Tag New Version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag test-${{ github.run_number }}
          git push origin --tags

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create test-${{ github.run_number }} \
            --title test-${{ github.run_number }} \
            --prerelease \
            --verify-tag \
            --notes-start-tag ${{ env.latest_tag }}
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: test-${{ github.run_number }}
#          release_name: Release ${{ github.run_number }}
#          body: ${{ steps.gitlog.outputs.commits }}
#          draft: false
#          prerelease: true

#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./release-${{ github.run_number }}.txt
#          asset_name: release-${{ github.run_number }}.txt
#          asset_content_type: text/plain
##          asset_content_type: application/zip
